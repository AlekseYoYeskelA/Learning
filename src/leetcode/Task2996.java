package leetcode;//Вам дан массив целых чисел с индексом 0 nums .
//
//Префикс nums[0..i] является последовательным , если для всех 1 <= j <= i, nums[j] = nums[j - 1] + 1.
// В частности, префикс, состоящий только из nums[0] является последовательностью.
//
//Возвращает наименьшее целое число x, отсутствующее в nums, где x больше или равно сумме самого длинного
// последовательного префикса.
//
//        Пример 1:
//
//Ввод: nums = [1,2,3,2,5]
//Вывод: 6
//Объяснение: Самый длинный последовательный префикс nums — [1,2,3] с суммой 6. 6 нет в массиве, поэтому 6 — это наименьшее недостающее целое число, большее или равное сумме самого длинного последовательного префикса.
//Пример 2:
//
//Ввод: nums = [3,4,5,1,12,14,13]
//Выход: 15
//Объяснение: Самый длинный последовательный префикс nums — [3,4,5] с суммой 12. 12, 13 и 14. принадлежат массиву, а 15 — нет.
// Следовательно, 15 — это наименьшее недостающее целое число, большее или равное сумме самого длинного последовательного префикса.
//
//
//Ограничения:
//
//        1 <= nums.length <= 50
//        1 <= nums[i] <= 50


import java.util.Arrays;

public class Task2996 {
    public static int missingInteger(int[] nums) {
        int sum = nums[0];
        for (int i = 0; i < nums.length; i++) { // определяем элементы префикса и их сумму
            if (nums[i + 1] == nums[i] + 1) {   // если следующий эл-т больше предыдущего на 1
                sum += nums[i + 1];             // присваиваем сумме: значение суммы + значение следующего элемента
            } else {
                break;
            }
        }
        Arrays.sort(nums);
//        for(int i=0; i<nums.length;i++){
//            if(nums[i]==sum){
//                sum++;
//           }
//        }
        for (int num : nums) { // сравниваем сумму эл-тов префикса с элементами массива, ищем отсутствующий num>=sum
            if (num == sum) {
                sum++;
            }
        }
        return sum;
    }

    public static void main(String[] args) {
        int[] nums = {3,4,5,1,12,14,13};
        System.out.println(missingInteger(nums));
    }
}





















